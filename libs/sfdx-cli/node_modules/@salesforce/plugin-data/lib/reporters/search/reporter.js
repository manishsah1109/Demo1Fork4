/*
 * Copyright (c) 2023, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { Ux } from '@salesforce/sf-plugins-core';
import { ensureString } from '@salesforce/ts-types';
import { omit } from '@salesforce/kit';
export class SearchReporter {
    result;
    typeRecordsMap = new Map();
    ux = new Ux();
    constructor(result) {
        this.result = result;
        this.result.searchRecords.map((r) => {
            const type = ensureString(r.attributes?.type);
            return this.typeRecordsMap.has(type)
                ? // the extra info in 'attributes' causes issues when creating generic csv/table columns
                    this.typeRecordsMap.get(type).push(omit(r, 'attributes'))
                : this.typeRecordsMap.set(type, [omit(r, 'attributes')]);
        });
    }
}
export class JsonSearchReporter extends SearchReporter {
    constructor(props) {
        super(props);
    }
    display() {
        this.ux.styledJSON(this.result);
    }
}
//# sourceMappingURL=reporter.js.map