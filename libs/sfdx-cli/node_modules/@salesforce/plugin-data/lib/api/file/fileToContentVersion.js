/*
 * Copyright (c) 2023, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { readFile } from 'node:fs/promises';
import { basename } from 'node:path';
import FormData from 'form-data';
export async function file2CV(conn, filepath, title) {
    const req = {
        PathOnClient: filepath,
        Title: title,
    };
    const form = new FormData();
    form.append('VersionData', await readFile(filepath), { filename: title ?? basename(filepath) });
    form.append('entity_content', JSON.stringify(req), { contentType: 'application/json' });
    // POST the multipart form to Salesforce's API, can't use the normal "create" action because it doesn't support multipart
    const CV = await conn.request({
        url: '/sobjects/ContentVersion',
        headers: { ...form.getHeaders() },
        body: form.getBuffer(),
        method: 'POST',
    });
    if (!CV.success) {
        throw new Error(`Failed to create ContentVersion: ${CV.errors.map((e) => JSON.stringify(e, null, 2)).join('\n')}`);
    }
    return conn.singleRecordQuery(`Select Id, ContentDocumentId, Title, FileExtension from ContentVersion where Id='${CV.id}'`);
}
//# sourceMappingURL=fileToContentVersion.js.map