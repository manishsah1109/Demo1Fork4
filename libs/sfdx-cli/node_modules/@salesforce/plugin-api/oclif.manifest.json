{
  "commands": {
    "api:request:graphql": {
      "aliases": [],
      "args": {},
      "description": "Run any valid GraphQL statement via the /graphql [API](https://developer.salesforce.com/docs/platform/graphql/guide/graphql-about.html)",
      "examples": [
        "- Runs the graphql query directly via the command line\n\n  <%= config.bin %> <%= command.id %> --body \"query accounts { uiapi { query { Account { edges { node { Id \\n Name { value } } } } } } }\"\n\n- Runs a mutation to create an Account, with an `example.txt` file, containing\n\n  mutation AccountExample{\n    uiapi {\n      AccountCreate(input: {\n        Account: {\n          Name: \"Trailblazer Express\"\n        }\n      }) {\n        Record {\n          Id\n          Name {\n            value\n          }\n        }\n      }\n    }\n  }\n\n<%= config.bin %> <%= command.id %> --body example.txt\n\nwill create a new account returning specified fields (Id, Name)"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "target-org": {
          "char": "o",
          "name": "target-org",
          "noCacheDefault": true,
          "required": true,
          "summary": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set.",
          "hasDynamicHelp": true,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stream-to-file": {
          "char": "S",
          "exclusive": [
            "include"
          ],
          "name": "stream-to-file",
          "summary": "Stream responses to a file.",
          "hasDynamicHelp": false,
          "helpValue": "Example: report.xlsx",
          "multiple": false,
          "type": "option"
        },
        "include": {
          "char": "i",
          "exclusive": [
            "stream-to-file"
          ],
          "name": "include",
          "summary": "Include the HTTP response status and headers in the output.",
          "allowNo": false,
          "type": "boolean"
        },
        "body": {
          "name": "body",
          "required": true,
          "summary": "File or content with GraphQL statement. Specify \"-\" to read from standard input.",
          "hasDynamicHelp": false,
          "helpValue": "file",
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": true,
      "hiddenAliases": [],
      "id": "api:request:graphql",
      "pluginAlias": "@salesforce/plugin-api",
      "pluginName": "@salesforce/plugin-api",
      "pluginType": "core",
      "state": "beta",
      "strict": true,
      "summary": "Execute GraphQL statements",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "api",
        "request",
        "graphql.js"
      ],
      "aliasPermutations": [],
      "permutations": [
        "api:request:graphql",
        "request:api:graphql",
        "request:graphql:api",
        "api:graphql:request",
        "graphql:api:request",
        "graphql:request:api"
      ]
    },
    "api:request:rest": {
      "aliases": [],
      "args": {
        "endpoint": {
          "description": "Salesforce API endpoint",
          "name": "endpoint",
          "required": true
        }
      },
      "examples": [
        "- List information about limits in the org with alias \"my-org\":\n\n  <%= config.bin %> <%= command.id %> 'limits' --target-org my-org\n\n- List all endpoints\n\n  <%= config.bin %> <%= command.id %> '/'\n\n- Get the response in XML format by specifying the \"Accept\" HTTP header:\n\n  <%= config.bin %> <%= command.id %> 'limits' --target-org my-org --header 'Accept: application/xml'\n\n- POST to create an Account object\n\n  <%= config.bin %> <%= command.id %> 'sobjects/account' --body \"{\\\"Name\\\" : \\\"Account from REST API\\\",\\\"ShippingCity\\\" : \\\"Boise\\\"}\" --method POST\n\n- or with a file 'info.json' containing\n\n  {\n    \"Name\": \"Demo\",\n    \"ShippingCity\": \"Boise\"\n  }\n\n<%= config.bin %> <%= command.id %> 'sobjects/account' --body info.json --method POST\n\n- Update object\n\n  <%= config.bin %> <%= command.id %> 'sobjects/account/<Account ID>' --body \"{\\\"BillingCity\\\": \\\"San Francisco\\\"}\" --method PATCH"
      ],
      "flags": {
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "target-org": {
          "char": "o",
          "name": "target-org",
          "noCacheDefault": true,
          "required": true,
          "summary": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set.",
          "hasDynamicHelp": true,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "include": {
          "char": "i",
          "exclusive": [
            "stream-to-file"
          ],
          "name": "include",
          "summary": "Include the HTTP response status and headers in the output.",
          "allowNo": false,
          "type": "boolean"
        },
        "method": {
          "char": "X",
          "name": "method",
          "summary": "HTTP method for the request.",
          "default": "GET",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "HEAD",
            "DELETE",
            "OPTIONS",
            "TRACE"
          ],
          "type": "option"
        },
        "header": {
          "char": "H",
          "name": "header",
          "summary": "HTTP header in \"key:value\" format.",
          "hasDynamicHelp": false,
          "helpValue": "key:value",
          "multiple": true,
          "type": "option"
        },
        "stream-to-file": {
          "char": "S",
          "exclusive": [
            "include"
          ],
          "name": "stream-to-file",
          "summary": "Stream responses to a file.",
          "hasDynamicHelp": false,
          "helpValue": "Example: report.xlsx",
          "multiple": false,
          "type": "option"
        },
        "body": {
          "name": "body",
          "summary": "File to use as the body for the request. Specify \"-\" to read from standard input; specify \"\" for an empty body.",
          "hasDynamicHelp": false,
          "helpValue": "file",
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": true,
      "hiddenAliases": [],
      "id": "api:request:rest",
      "pluginAlias": "@salesforce/plugin-api",
      "pluginName": "@salesforce/plugin-api",
      "pluginType": "core",
      "state": "beta",
      "strict": true,
      "summary": "Make an authenticated HTTP request to Salesforce REST API and print the response.",
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "api",
        "request",
        "rest.js"
      ],
      "aliasPermutations": [],
      "permutations": [
        "api:request:rest",
        "request:api:rest",
        "request:rest:api",
        "api:rest:request",
        "rest:api:request",
        "rest:request:api"
      ]
    }
  },
  "version": "1.2.1"
}