import { getSecondsToHuman } from './timeUtils.js';
export class SandboxReporter {
    static sandboxProgress(update) {
        const { remainingWait, interval, sandboxProcessObj, waitingOnAuth } = update;
        const waitTime = getSecondsToHuman(remainingWait);
        const waitTimeMsg = `Sleeping ${interval} seconds. Will wait ${waitTime} more before timing out.`;
        const sandboxIdentifierMsg = `${sandboxProcessObj.SandboxName}(${sandboxProcessObj.Id})`;
        const waitingOnAuthMessage = waitingOnAuth ? ', waiting on JWT auth' : '';
        const completionMessage = sandboxProcessObj.CopyProgress
            ? `(${sandboxProcessObj.CopyProgress}% completed${waitingOnAuthMessage})`
            : '';
        return `Sandbox request ${sandboxIdentifierMsg} is ${sandboxProcessObj.Status} ${completionMessage}. ${waitTimeMsg}`;
    }
    static logSandboxProcessResult(result
    // sandboxProcessObj.CopyProgress is a number
    ) {
        const { sandboxProcessObj, sandboxRes } = result;
        const sandboxReadyForUse = `Sandbox ${sandboxProcessObj.SandboxName}(${sandboxProcessObj.Id}) is ready for use.`;
        const data = [
            { key: 'Id', value: sandboxProcessObj.Id },
            { key: 'SandboxName', value: sandboxProcessObj.SandboxName },
            { key: 'Status', value: sandboxProcessObj.Status },
            { key: 'CopyProgress', value: sandboxProcessObj.CopyProgress },
            { key: 'Description', value: sandboxProcessObj.Description },
            { key: 'LicenseType', value: sandboxProcessObj.LicenseType },
            { key: 'SandboxInfoId', value: sandboxProcessObj.SandboxInfoId },
            { key: 'SourceId', value: sandboxProcessObj.SourceId },
            { key: 'SandboxOrg', value: sandboxProcessObj.SandboxOrganization },
            { key: 'Created Date', value: sandboxProcessObj.CreatedDate },
            { key: 'ApexClassId', value: sandboxProcessObj.ApexClassId },
            { key: 'Authorized Sandbox Username', value: sandboxRes.authUserName },
        ];
        return { sandboxReadyForUse, data };
    }
}
//# sourceMappingURL=sandboxReporter.js.map