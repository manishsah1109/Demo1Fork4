/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { scratchOrgLifecycleStages } from '@salesforce/core';
import ansis from 'ansis';
import { capitalCase } from 'change-case';
import { StandardColors } from '@salesforce/sf-plugins-core';
const boldBlue = (input) => ansis.rgb(81, 176, 235).bold(input);
const boldPurple = (input) => ansis.rgb(157, 129, 221).bold(input);
export const buildStatus = (data, baseUrl) => `
RequestId: ${formatRequest(baseUrl, data.scratchOrgInfo?.Id)}
OrgId: ${formatOrgId(data.scratchOrgInfo?.ScratchOrg)}
Username: ${formatUsername(data.scratchOrgInfo?.SignupUsername)}
${formatStage(data.stage)}`;
export const formatStage = (currentStage) => scratchOrgLifecycleStages
    .map((stage, stageIndex) => {
    // current stage
    if (currentStage === stage)
        return formatCurrentStage(stage);
    // completed stages
    if (scratchOrgLifecycleStages.indexOf(currentStage) > stageIndex)
        return formatCompletedStage(stage);
    // future stage
    return formatFutureStage(stage);
})
    .join('\n');
export const formatRequest = (baseUrl, id) => `${id ? `${ansis.bold(id)} (${baseUrl}/${id})` : ''}`;
export const formatUsername = (username) => `${username ? `${boldBlue(username)} ` : ''}`;
export const formatOrgId = (id) => `${id ? `${boldBlue(id)} ` : ''}`;
export const formatCurrentStage = (stage) => boldPurple(capitalCase(stage));
export const formatCompletedStage = (stage) => StandardColors.success.bold(`âœ“ ${capitalCase(stage)}`);
export const formatFutureStage = (stage) => StandardColors.info(capitalCase(stage));
//# sourceMappingURL=scratchOrgOutput.js.map