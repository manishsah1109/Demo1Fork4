/*
 * Copyright (c) 2023, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { SfCommand, Flags } from '@salesforce/sf-plugins-core';
import { Messages } from '@salesforce/core';
Messages.importMessagesDirectoryFromMetaUrl(import.meta.url);
const messages = Messages.loadMessages('@salesforce/plugin-org', 'org.enable.tracking');
export default class OrgEnableTracking extends SfCommand {
    static summary = messages.getMessage('summary');
    static description = messages.getMessage('description');
    static examples = messages.getMessages('examples');
    static flags = {
        'target-org': Flags.requiredOrg(),
    };
    async run() {
        const { flags } = await this.parse(OrgEnableTracking);
        // can this org do tracking?
        if (!(await flags['target-org'].supportsSourceTracking())) {
            throw messages.createError('error.TrackingNotAvailable');
        }
        await flags['target-org'].setTracksSource(true);
        this.logSuccess(messages.getMessage('success', [flags['target-org'].getUsername()]));
        return {
            tracksSource: await flags['target-org'].tracksSource(),
            username: flags['target-org'].getUsername(),
        };
    }
}
//# sourceMappingURL=tracking.js.map