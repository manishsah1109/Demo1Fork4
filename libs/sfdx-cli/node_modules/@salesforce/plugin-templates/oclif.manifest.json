{
  "commands": {
    "project:generate": {
      "aliases": [
        "force:project:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "A Salesforce DX project has a specific structure and a configuration file (sfdx-project.json) that identifies the directory as a Salesforce DX project. This command generates the necessary configuration files and directories to get you started.\n\nBy default, the generated sfdx-project.json file sets the sourceApiVersion property to the default API version currently used by Salesforce CLI. To specify a different version, set the apiVersion configuration variable. For example: \"sf config set apiVersion=57.0 --global\".",
      "examples": [
        "Generate a project called \"mywork\":\n<%= config.bin %> <%= command.id %> --name mywork",
        "Similar to previous example, but generate the files in a directory called \"myapp\":\n<%= config.bin %> <%= command.id %> --name mywork --default-package-dir myapp",
        "Similar to prevoius example, but also generate a default package.xml manifest file:\n<%= config.bin %> <%= command.id %> --name mywork --default-package-dir myapp --manifest",
        "Generate a project with the minimum files and directories:\n<%= config.bin %> <%= command.id %> --name mywork --template empty"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "projectname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "Generates a project directory with this name; any valid directory name is accepted. Also sets the \"name\" property in the sfdx-project.json file to this name.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated project.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "The template determines the sample configuration files and directories that this command generates. For example, the empty template provides these files and directory to get you started.\n\n- .forceignore\n- config/project-scratch-def.json\n- sfdx-project.json\n- package.json\n- force-app (basic source directory structure)\n\nThe standard template provides a complete force-app directory structure so you know where to put your source. It also provides additional files and scripts, especially useful when using Salesforce Extensions for VS Code. For example:\n\n- .gitignore: Use Git for version control.\n- .prettierrc and .prettierignore: Use Prettier to format your Aura components.\n- .vscode/extensions.json: When launched, Visual Studio Code, prompts you to install the recommended extensions for your project.\n- .vscode/launch.json: Configures Replay Debugger.\n- .vscode/settings.json: Additional configuration settings.\n\nThe analytics template provides similar files and the force-app/main/default/waveTemplates directory.",
          "name": "template",
          "summary": "Template to use for project creation.",
          "default": "standard",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "standard",
            "empty",
            "analytics"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "namespace": {
          "char": "s",
          "name": "namespace",
          "summary": "Namespace associated with this project and any connected scratch orgs.",
          "default": "",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "default-package-dir": {
          "aliases": [
            "defaultpackagedir"
          ],
          "char": "p",
          "deprecateAliases": true,
          "description": "Metadata items such as classes and Lightning bundles are placed inside this folder.",
          "name": "default-package-dir",
          "summary": "Default package directory name.",
          "default": "force-app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "manifest": {
          "char": "x",
          "description": "Generates a default manifest (package.xml) for fetching Apex, Visualforce, Lightning components, and static resources.",
          "name": "manifest",
          "summary": "Generate a manifest (package.xml) for change-set based development.",
          "allowNo": false,
          "type": "boolean"
        },
        "login-url": {
          "aliases": [
            "loginurl"
          ],
          "char": "l",
          "deprecateAliases": true,
          "description": "Normally defaults to https://login.salesforce.com.",
          "hidden": true,
          "name": "login-url",
          "summary": "Salesforce instance login URL.",
          "default": "https://login.salesforce.com",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "summary": "Will set this version as sourceApiVersion in the sfdx-project.json file",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "project:generate",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Salesforce DX project.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "project",
        "generate.js"
      ],
      "aliasPermutations": [
        "force:project:create",
        "project:force:create",
        "project:create:force",
        "force:create:project",
        "create:force:project",
        "create:project:force"
      ],
      "permutations": [
        "project:generate",
        "generate:project"
      ]
    },
    "static-resource:generate": {
      "aliases": [
        "force:staticresource:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates the metadata resource file in the specified directory or the current working directory. Static resource files must be contained in a parent directory called \"staticresources\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to create one or point to an existing one.",
      "examples": [
        "Generate the metadata file for a static resource called MyResource in the current directory:\n<%= config.bin %> <%= command.id %> --name MyResource",
        "Similar to previous example, but specifies a MIME type of application/json:\n<%= config.bin %> <%= command.id %> --name MyResource --type application/json",
        "Generate the resource file in the \"force-app/main/default/staticresources\" directory:\n<%= config.bin %> <%= command.id %> --name MyResource --output-dir force-app/main/default/staticresources"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "resourcename"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "This name can contain only underscores and alphanumeric characters, and must be unique in your org. It must begin with a letter, not include spaces, not end with an underscore, and not contain two consecutive underscores.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated static resource.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "type": {
          "aliases": [
            "contenttype"
          ],
          "deprecateAliases": true,
          "description": "Must be a valid MIME type such as application/json, application/javascript, application/zip, text/plain, text/css, etc.",
          "name": "type",
          "summary": "Content type (mime type) of the generated static resource.",
          "default": "application/zip",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "static-resource:generate",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a static resource.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "static-resource",
        "generate.js"
      ],
      "aliasPermutations": [
        "force:staticresource:create",
        "staticresource:force:create",
        "staticresource:create:force",
        "force:create:staticresource",
        "create:force:staticresource",
        "create:staticresource:force"
      ],
      "permutations": [
        "static-resource:generate",
        "generate:static-resource"
      ]
    },
    "analytics:generate:template": {
      "aliases": [
        "force:analytics:template:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "The metadata files associated with the Analytics template must be contained in a parent directory called \"waveTemplates\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to generate one or point to an existing one.",
      "examples": [
        "Generate the metadata files for a simple Analytics template file called myTemplate in the force-app/main/default/waveTemplates directory:\n<%= config.bin %> <%= command.id %> --name myTemplate --output-dir force-app/main/default/waveTemplates"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "templatename"
          ],
          "char": "n",
          "deprecateAliases": true,
          "name": "name",
          "required": true,
          "summary": "Name of the Analytics template.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "analytics:generate:template",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a simple Analytics template.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "analytics",
        "generate",
        "template.js"
      ],
      "aliasPermutations": [
        "force:analytics:template:create",
        "analytics:force:template:create",
        "analytics:template:force:create",
        "analytics:template:create:force",
        "force:template:analytics:create",
        "template:force:analytics:create",
        "template:analytics:force:create",
        "template:analytics:create:force",
        "force:template:create:analytics",
        "template:force:create:analytics",
        "template:create:force:analytics",
        "template:create:analytics:force",
        "force:analytics:create:template",
        "analytics:force:create:template",
        "analytics:create:force:template",
        "analytics:create:template:force",
        "force:create:analytics:template",
        "create:force:analytics:template",
        "create:analytics:force:template",
        "create:analytics:template:force",
        "force:create:template:analytics",
        "create:force:template:analytics",
        "create:template:force:analytics",
        "create:template:analytics:force"
      ],
      "permutations": [
        "analytics:generate:template",
        "generate:analytics:template",
        "generate:template:analytics",
        "analytics:template:generate",
        "template:analytics:generate",
        "template:generate:analytics"
      ]
    },
    "apex:generate:class": {
      "aliases": [
        "force:apex:class:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates the Apex *.cls file and associated metadata file. These files must be contained in a parent directory called \"classes\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to generate one or point to an existing one.",
      "examples": [
        "Generate two metadata files associated with the MyClass Apex class (MyClass.cls and MyClass.cls-meta.xml) in the current directory:\n<%= config.bin %> <%= command.id %> --name MyClass",
        "Similar to previous example, but generates the files in the \"force-app/main/default/classes\" directory:\n<%= config.bin %> <%= command.id %> --name MyClass --output-dir force-app/main/default/classes"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "classname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Apex class.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultApexClass",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "ApexException",
            "ApexUnitTest",
            "BasicUnitTest",
            "DefaultApexClass",
            "InboundEmailService"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apex:generate:class",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate an Apex class.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "apex",
        "generate",
        "class.js"
      ],
      "aliasPermutations": [
        "force:apex:class:create",
        "apex:force:class:create",
        "apex:class:force:create",
        "apex:class:create:force",
        "force:class:apex:create",
        "class:force:apex:create",
        "class:apex:force:create",
        "class:apex:create:force",
        "force:class:create:apex",
        "class:force:create:apex",
        "class:create:force:apex",
        "class:create:apex:force",
        "force:apex:create:class",
        "apex:force:create:class",
        "apex:create:force:class",
        "apex:create:class:force",
        "force:create:apex:class",
        "create:force:apex:class",
        "create:apex:force:class",
        "create:apex:class:force",
        "force:create:class:apex",
        "create:force:class:apex",
        "create:class:force:apex",
        "create:class:apex:force"
      ],
      "permutations": [
        "apex:generate:class",
        "generate:apex:class",
        "generate:class:apex",
        "apex:class:generate",
        "class:apex:generate",
        "class:generate:apex"
      ]
    },
    "apex:generate:trigger": {
      "aliases": [
        "force:apex:trigger:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates the Apex trigger *.trigger file and associated metadata file. These files must be contained in a parent directory called \"triggers\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to generate one or point to an existing one.\n\nIf you don't specify the --sobject flag, the .trigger file contains the generic placeholder SOBJECT; replace it with the Salesforce object you want to generate a trigger for. If you don't specify --event, \"before insert\" is used.",
      "examples": [
        "Generate two files associated with the MyTrigger Apex trigger (MyTrigger.trigger and MyTrigger.trigger-meta.xml) in the current directory:\n<%= config.bin %> <%= command.id %> --name MyTrigger",
        "Similar to the previous example, but generate the files in the \"force-app/main/default/triggers\" directory:\n<%= config.bin %> <%= command.id %> --name MyTrigger --output-dir force-app/main/default/triggers",
        "Generate files for a trigger that fires on the Account object before and after an insert:\n<%= config.bin %> <%= command.id %> --name MyTrigger --sobject Account --event \"before insert,after insert\""
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "triggername"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Apex trigger",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "ApexTrigger",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "ApexTrigger"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "sobject": {
          "char": "s",
          "name": "sobject",
          "summary": "Salesforce object to generate a trigger on.",
          "default": "SOBJECT",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "event": {
          "aliases": [
            "triggerevents"
          ],
          "char": "e",
          "deprecateAliases": true,
          "name": "event",
          "summary": "Events that fire the trigger.",
          "default": [
            "before insert"
          ],
          "delimiter": ",",
          "hasDynamicHelp": false,
          "multiple": true,
          "options": [
            "before insert",
            "before update",
            "before delete",
            "after insert",
            "after update",
            "after delete",
            "after undelete"
          ],
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apex:generate:trigger",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate an Apex trigger.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "apex",
        "generate",
        "trigger.js"
      ],
      "aliasPermutations": [
        "force:apex:trigger:create",
        "apex:force:trigger:create",
        "apex:trigger:force:create",
        "apex:trigger:create:force",
        "force:trigger:apex:create",
        "trigger:force:apex:create",
        "trigger:apex:force:create",
        "trigger:apex:create:force",
        "force:trigger:create:apex",
        "trigger:force:create:apex",
        "trigger:create:force:apex",
        "trigger:create:apex:force",
        "force:apex:create:trigger",
        "apex:force:create:trigger",
        "apex:create:force:trigger",
        "apex:create:trigger:force",
        "force:create:apex:trigger",
        "create:force:apex:trigger",
        "create:apex:force:trigger",
        "create:apex:trigger:force",
        "force:create:trigger:apex",
        "create:force:trigger:apex",
        "create:trigger:force:apex",
        "create:trigger:apex:force"
      ],
      "permutations": [
        "apex:generate:trigger",
        "generate:apex:trigger",
        "generate:trigger:apex",
        "apex:trigger:generate",
        "trigger:apex:generate",
        "trigger:generate:apex"
      ]
    },
    "lightning:generate:app": {
      "aliases": [
        "force:lightning:app:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates a Lightning App bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "examples": [
        "Generate the metadata files for a Lightning app bundle called \"myapp\" in the current directory:\n<%= config.bin %> <%= command.id %> --name myapp",
        "Similar to the previous example, but generate the files in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name myapp --output-dir force-app/main/default/aura"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "appname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Lightning App.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultLightningApp",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "DefaultLightningApp"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "internal": {
          "char": "i",
          "hidden": true,
          "name": "internal",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "lightning:generate:app",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Lightning App.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "lightning",
        "generate",
        "app.js"
      ],
      "aliasPermutations": [
        "force:lightning:app:create",
        "lightning:force:app:create",
        "lightning:app:force:create",
        "lightning:app:create:force",
        "force:app:lightning:create",
        "app:force:lightning:create",
        "app:lightning:force:create",
        "app:lightning:create:force",
        "force:app:create:lightning",
        "app:force:create:lightning",
        "app:create:force:lightning",
        "app:create:lightning:force",
        "force:lightning:create:app",
        "lightning:force:create:app",
        "lightning:create:force:app",
        "lightning:create:app:force",
        "force:create:lightning:app",
        "create:force:lightning:app",
        "create:lightning:force:app",
        "create:lightning:app:force",
        "force:create:app:lightning",
        "create:force:app:lightning",
        "create:app:force:lightning",
        "create:app:lightning:force"
      ],
      "permutations": [
        "lightning:generate:app",
        "generate:lightning:app",
        "generate:app:lightning",
        "lightning:app:generate",
        "app:lightning:generate",
        "app:generate:lightning"
      ]
    },
    "lightning:generate:component": {
      "aliases": [
        "force:lightning:component:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates the bundle in the specified directory or the current working directory. The bundle consists of multiple files in a directory with the designated name. Lightning web components are contained in the directory with name \"lwc\", Aura components in \"aura\".\n\nTo generate a Lightning web component, pass \"--type lwc\" to the command. If you don’t specify --type, Salesforce CLI generates an Aura component by default.",
      "examples": [
        "Generate the metadata files for an Aura component bundle in the current directory:\n<%= config.bin %> <%= command.id %> --name mycomponent",
        "Generate a Lightning web component bundle in the current directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --type lwc",
        "Generate an Aura component bundle in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --output-dir force-app/main/default/aura",
        "Generate a Lightning web component bundle in the \"force-app/main/default/lwc\" directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --type lwc --output-dir force-app/main/default/lwc"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "componentname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Lightning Component.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "default",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "default",
            "analyticsDashboard",
            "analyticsDashboardWithStep"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "type": {
          "name": "type",
          "summary": "Type of the component bundle.",
          "default": "aura",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "aura",
            "lwc"
          ],
          "type": "option"
        },
        "internal": {
          "char": "i",
          "hidden": true,
          "name": "internal",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "lightning:generate:component",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a bundle for an Aura component or a Lightning web component.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "lightning",
        "generate",
        "component.js"
      ],
      "aliasPermutations": [
        "force:lightning:component:create",
        "lightning:force:component:create",
        "lightning:component:force:create",
        "lightning:component:create:force",
        "force:component:lightning:create",
        "component:force:lightning:create",
        "component:lightning:force:create",
        "component:lightning:create:force",
        "force:component:create:lightning",
        "component:force:create:lightning",
        "component:create:force:lightning",
        "component:create:lightning:force",
        "force:lightning:create:component",
        "lightning:force:create:component",
        "lightning:create:force:component",
        "lightning:create:component:force",
        "force:create:lightning:component",
        "create:force:lightning:component",
        "create:lightning:force:component",
        "create:lightning:component:force",
        "force:create:component:lightning",
        "create:force:component:lightning",
        "create:component:force:lightning",
        "create:component:lightning:force"
      ],
      "permutations": [
        "lightning:generate:component",
        "generate:lightning:component",
        "generate:component:lightning",
        "lightning:component:generate",
        "component:lightning:generate",
        "component:generate:lightning"
      ]
    },
    "lightning:generate:event": {
      "aliases": [
        "force:lightning:event:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates a Lightning Event bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "examples": [
        "Generate the metadata files for a Lightning event bundle called \"myevent\" in the current directory:\n<%= config.bin %> <%= command.id %> --name myevent",
        "Similar to previous example, but generate the files in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name myevent --output-dir force-app/main/default/aura"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "eventname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Lightning Event.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultLightningEvt",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "DefaultLightningEvt"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "internal": {
          "char": "i",
          "hidden": true,
          "name": "internal",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "lightning:generate:event",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Lightning Event.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "lightning",
        "generate",
        "event.js"
      ],
      "aliasPermutations": [
        "force:lightning:event:create",
        "lightning:force:event:create",
        "lightning:event:force:create",
        "lightning:event:create:force",
        "force:event:lightning:create",
        "event:force:lightning:create",
        "event:lightning:force:create",
        "event:lightning:create:force",
        "force:event:create:lightning",
        "event:force:create:lightning",
        "event:create:force:lightning",
        "event:create:lightning:force",
        "force:lightning:create:event",
        "lightning:force:create:event",
        "lightning:create:force:event",
        "lightning:create:event:force",
        "force:create:lightning:event",
        "create:force:lightning:event",
        "create:lightning:force:event",
        "create:lightning:event:force",
        "force:create:event:lightning",
        "create:force:event:lightning",
        "create:event:force:lightning",
        "create:event:lightning:force"
      ],
      "permutations": [
        "lightning:generate:event",
        "generate:lightning:event",
        "generate:event:lightning",
        "lightning:event:generate",
        "event:lightning:generate",
        "event:generate:lightning"
      ]
    },
    "lightning:generate:interface": {
      "aliases": [
        "force:lightning:interface:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates a Lightning Interface bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "examples": [
        "Generate the metadata files for a Lightning interface bundle called \"myinterface\" in the current directory:\n<%= config.bin %> <%= command.id %> --name myinterface",
        "Similar to the previous example but generate the files in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name myinterface --output-dir force-app/main/default/aura"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "interfacename"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Lightning Interface.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultLightningIntf",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "DefaultLightningIntf"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "internal": {
          "char": "i",
          "hidden": true,
          "name": "internal",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "lightning:generate:interface",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Lightning Interface.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "lightning",
        "generate",
        "interface.js"
      ],
      "aliasPermutations": [
        "force:lightning:interface:create",
        "lightning:force:interface:create",
        "lightning:interface:force:create",
        "lightning:interface:create:force",
        "force:interface:lightning:create",
        "interface:force:lightning:create",
        "interface:lightning:force:create",
        "interface:lightning:create:force",
        "force:interface:create:lightning",
        "interface:force:create:lightning",
        "interface:create:force:lightning",
        "interface:create:lightning:force",
        "force:lightning:create:interface",
        "lightning:force:create:interface",
        "lightning:create:force:interface",
        "lightning:create:interface:force",
        "force:create:lightning:interface",
        "create:force:lightning:interface",
        "create:lightning:force:interface",
        "create:lightning:interface:force",
        "force:create:interface:lightning",
        "create:force:interface:lightning",
        "create:interface:force:lightning",
        "create:interface:lightning:force"
      ],
      "permutations": [
        "lightning:generate:interface",
        "generate:lightning:interface",
        "generate:interface:lightning",
        "lightning:interface:generate",
        "interface:lightning:generate",
        "interface:generate:lightning"
      ]
    },
    "lightning:generate:test": {
      "aliases": [
        "force:lightning:test:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Generates the test in the specified directory or the current working directory. The .resource file and associated metadata file are generated.",
      "examples": [
        "Generate the metadata files for the Lightning test called MyLightningTest in the current directory:\n<%= config.bin %> <%= command.id %> --name MyLightningTest",
        "Similar to the previous example but generate the files in the \"force-app/main/default/lightningTests\" directory:\n<%= config.bin %> <%= command.id %> --name MyLightningTest --output-dir force-app/main/default/lightningTests"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "testname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "Name of the new Lightning test; can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Lightning Test.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultLightningTest",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "DefaultLightningTest"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "internal": {
          "char": "i",
          "hidden": true,
          "name": "internal",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "allowNo": false,
          "type": "boolean"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "lightning:generate:test",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Lightning test.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "lightning",
        "generate",
        "test.js"
      ],
      "aliasPermutations": [
        "force:lightning:test:create",
        "lightning:force:test:create",
        "lightning:test:force:create",
        "lightning:test:create:force",
        "force:test:lightning:create",
        "test:force:lightning:create",
        "test:lightning:force:create",
        "test:lightning:create:force",
        "force:test:create:lightning",
        "test:force:create:lightning",
        "test:create:force:lightning",
        "test:create:lightning:force",
        "force:lightning:create:test",
        "lightning:force:create:test",
        "lightning:create:force:test",
        "lightning:create:test:force",
        "force:create:lightning:test",
        "create:force:lightning:test",
        "create:lightning:force:test",
        "create:lightning:test:force",
        "force:create:test:lightning",
        "create:force:test:lightning",
        "create:test:force:lightning",
        "create:test:lightning:force"
      ],
      "permutations": [
        "lightning:generate:test",
        "generate:lightning:test",
        "generate:test:lightning",
        "lightning:test:generate",
        "test:lightning:generate",
        "test:generate:lightning"
      ]
    },
    "visualforce:generate:component": {
      "aliases": [
        "force:visualforce:component:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "The command generates the .Component file and associated metadata file in the specified directory or the current working directory by default.",
      "examples": [
        "Generate the metadata files for a Visualforce component in the current directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --label mylabel",
        "Similar to previous example, but generate the files in the directory \"force-app/main/default/components\":\n<%= config.bin %> <%= command.id %> --name mycomponent --label mylabel --output-dir components"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "componentname"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Visualforce Component.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultVFComponent",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "DefaultVFComponent"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "label": {
          "char": "l",
          "name": "label",
          "required": true,
          "summary": "Visualforce Component label.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "visualforce:generate:component",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Visualforce Component.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "visualforce",
        "generate",
        "component.js"
      ],
      "aliasPermutations": [
        "force:visualforce:component:create",
        "visualforce:force:component:create",
        "visualforce:component:force:create",
        "visualforce:component:create:force",
        "force:component:visualforce:create",
        "component:force:visualforce:create",
        "component:visualforce:force:create",
        "component:visualforce:create:force",
        "force:component:create:visualforce",
        "component:force:create:visualforce",
        "component:create:force:visualforce",
        "component:create:visualforce:force",
        "force:visualforce:create:component",
        "visualforce:force:create:component",
        "visualforce:create:force:component",
        "visualforce:create:component:force",
        "force:create:visualforce:component",
        "create:force:visualforce:component",
        "create:visualforce:force:component",
        "create:visualforce:component:force",
        "force:create:component:visualforce",
        "create:force:component:visualforce",
        "create:component:force:visualforce",
        "create:component:visualforce:force"
      ],
      "permutations": [
        "visualforce:generate:component",
        "generate:visualforce:component",
        "generate:component:visualforce",
        "visualforce:component:generate",
        "component:visualforce:generate",
        "component:generate:visualforce"
      ]
    },
    "visualforce:generate:page": {
      "aliases": [
        "force:visualforce:page:create"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "The command generates the .Page file and associated metadata file in the specified directory or the current working directory by default.",
      "examples": [
        "Generate the metadata files for a Visualforce page in the current directory:\n<%= config.bin %> <%= command.id %> --name mypage --label mylabel",
        "Similar to previous example, but generate the files in the directory \"force-app/main/default/pages\":\n<%= config.bin %> <%= command.id %> --name mypage --label mylabel --output-dir pages"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "aliases": [
            "pagename"
          ],
          "char": "n",
          "deprecateAliases": true,
          "description": "The name can be up to 40 characters and must start with a letter.",
          "name": "name",
          "required": true,
          "summary": "Name of the generated Visualforce Page.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "template": {
          "char": "t",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "hidden": true,
          "name": "template",
          "summary": "Template to use for file creation.",
          "default": "DefaultVFPage",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "DefaultVFPage"
          ],
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir"
          ],
          "char": "d",
          "deprecateAliases": true,
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "name": "output-dir",
          "summary": "Directory for saving the created files.",
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api-version": {
          "aliases": [
            "apiversion"
          ],
          "deprecateAliases": true,
          "description": "Override the api version used for api requests made by this command",
          "name": "api-version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "label": {
          "char": "l",
          "name": "label",
          "required": true,
          "summary": "Visualforce Page label.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "visualforce:generate:page",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginName": "@salesforce/plugin-templates",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate a Visualforce Page.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "visualforce",
        "generate",
        "page.js"
      ],
      "aliasPermutations": [
        "force:visualforce:page:create",
        "visualforce:force:page:create",
        "visualforce:page:force:create",
        "visualforce:page:create:force",
        "force:page:visualforce:create",
        "page:force:visualforce:create",
        "page:visualforce:force:create",
        "page:visualforce:create:force",
        "force:page:create:visualforce",
        "page:force:create:visualforce",
        "page:create:force:visualforce",
        "page:create:visualforce:force",
        "force:visualforce:create:page",
        "visualforce:force:create:page",
        "visualforce:create:force:page",
        "visualforce:create:page:force",
        "force:create:visualforce:page",
        "create:force:visualforce:page",
        "create:visualforce:force:page",
        "create:visualforce:page:force",
        "force:create:page:visualforce",
        "create:force:page:visualforce",
        "create:page:force:visualforce",
        "create:page:visualforce:force"
      ],
      "permutations": [
        "visualforce:generate:page",
        "generate:visualforce:page",
        "generate:page:visualforce",
        "visualforce:page:generate",
        "page:visualforce:generate",
        "page:generate:visualforce"
      ]
    }
  },
  "version": "56.3.14"
}