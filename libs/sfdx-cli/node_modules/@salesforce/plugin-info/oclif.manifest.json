{
  "commands": {
    "doctor": {
      "aliases": [],
      "args": {},
      "description": "When you run the doctor command without parameters, it first displays a diagnostic overview of your environment. It then writes a detailed diagnosis to a JSON file in the current directory. Use the --outputdir to specify a different directory. To run diagnostic tests on a specific plugin, use the --plugin parameter. If the plugin isn't listening to the doctor, then you get a warning.\n\nUse the --command parameter to run a specific command in debug mode; the doctor writes both stdout and stderr to \\*.log files that you can provide to Salesforce Customer Support or attach to a GitHub issue.\n\nPlugin providers can also implement their own doctor diagnostic tests by listening to the \"sf-doctor\" event and running plugin specific tests that are then included in the doctor diagnostics log.",
      "examples": [
        "Run CLI doctor diagnostics:\n<%= config.bin %> doctor",
        "Run CLI doctor diagnostics and the specified command, and write the debug output to a file:\n<%= config.bin %> doctor --command \"force:org:list --all\"",
        "Run CLI doctor diagnostics for a specific plugin:\n<%= config.bin %> doctor --plugin @salesforce/plugin-source"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "command": {
          "char": "c",
          "name": "command",
          "summary": "Command to run in debug mode; results are written to a log file.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "plugin": {
          "char": "p",
          "name": "plugin",
          "summary": "Specific plugin on which to run diagnostics.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "output-dir": {
          "aliases": [
            "outputdir",
            "o"
          ],
          "char": "d",
          "name": "output-dir",
          "summary": "Directory to save all created files rather than the current working directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "create-issue": {
          "aliases": [
            "createissue"
          ],
          "char": "i",
          "name": "create-issue",
          "summary": "Create a new issue on our GitHub repo and attach all diagnostic results.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "doctor",
      "pluginAlias": "@salesforce/plugin-info",
      "pluginName": "@salesforce/plugin-info",
      "pluginType": "core",
      "strict": true,
      "summary": "Gather CLI configuration data and run diagnostic tests to discover and report potential problems in your environment.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "doctor.js"
      ],
      "aliasPermutations": [],
      "permutations": [
        "doctor"
      ]
    },
    "info:releasenotes:display": {
      "aliases": [
        "whatsnew"
      ],
      "args": {},
      "description": "By default, this command displays release notes for the currently installed CLI version on your computer. Use the --version flag to view release notes for a different release.",
      "examples": [
        "Display release notes for the currently installed CLI version:\n<%= config.bin %> <%= command.id %> stable, stable-rc, latest, latest-rc, rc",
        "Display release notes for CLI version 7.120.0:\n<%= config.bin %> <%= command.id %> --version 7.120.0 stable, stable-rc, latest, latest-rc, rc",
        "Display release notes for the CLI version that corresponds to a tag (stable, stable-rc, latest, latest-rc, rc):\n<%= config.bin %> <%= command.id %> --version latest"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "char": "v",
          "name": "version",
          "summary": "CLI version or tag for which to display release notes.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "hook": {
          "hidden": true,
          "name": "hook",
          "summary": "This hidden parameter is used in post install or update hooks.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "info:releasenotes:display",
      "pluginAlias": "@salesforce/plugin-info",
      "pluginName": "@salesforce/plugin-info",
      "pluginType": "core",
      "strict": true,
      "summary": "Display Salesforce CLI release notes on the command line.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "info",
        "releasenotes",
        "display.js"
      ],
      "aliasPermutations": [
        "whatsnew"
      ],
      "permutations": [
        "info:releasenotes:display",
        "releasenotes:info:display",
        "releasenotes:display:info",
        "info:display:releasenotes",
        "display:info:releasenotes",
        "display:releasenotes:info"
      ]
    }
  },
  "version": "3.4.2"
}