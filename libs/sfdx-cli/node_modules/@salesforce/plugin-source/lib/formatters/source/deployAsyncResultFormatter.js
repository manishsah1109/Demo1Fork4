/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { EOL } from 'node:os';
import { Messages } from '@salesforce/core';
import { ResultFormatter } from '../resultFormatter.js';
Messages.importMessagesDirectoryFromMetaUrl(import.meta.url);
const messages = Messages.loadMessages('@salesforce/plugin-source', 'deploy');
export class DeployAsyncResultFormatter extends ResultFormatter {
    result;
    constructor(ux, options, result) {
        super(ux, options);
        this.result = result;
    }
    /**
     * Get the JSON output from the AsyncDeployResult.
     *
     * @returns a DeployCommandAsyncResult.
     */
    getJson() {
        const asyncResult = {
            id: this.result.id,
            done: false,
            state: 'Queued',
            status: 'Queued',
            timedOut: true,
        };
        const resultClone = structuredClone(asyncResult);
        asyncResult.outboundFiles = [];
        asyncResult.deploys = [resultClone];
        return asyncResult;
    }
    /**
     * Displays async deploy results in human format.
     */
    display() {
        this.ux.log(messages.getMessage('asyncDeployQueued'), EOL);
        this.ux.log(messages.getMessage('asyncDeployCancel', [this.result.id, this.options.username]));
        this.ux.log(messages.getMessage('asyncDeployReport', [this.result.id, this.options.username]));
    }
}
//# sourceMappingURL=deployAsyncResultFormatter.js.map