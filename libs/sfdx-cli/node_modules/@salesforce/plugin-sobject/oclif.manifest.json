{
  "commands": {
    "schema:generate:field": {
      "aliases": [
        "generate:metadata:field"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "This command is interactive and must be run in a Salesforce DX project directory. You're required to specify the field's label with the \"--label\" flag. The command uses this label to provide intelligent suggestions for other field properties, such as its API name.\n\nYou can generate a custom field on either a standard object, such as Account, or a custom object. In both cases, the source files for the object must already exist in your local project before you run this command. If you create a relationship field, the source files for the parent object must also exist in your local directory.  Use the command \"sf metadata retrieve -m CustomObject:<object>\" to retrieve source files for both standard and custom objects from your org.  To create a custom object, run the \"sf generate metadata sobject\" command or use the Object Manager UI in your Salesforce org.",
      "examples": [
        "Create a field with the specified label; the command prompts you for the object:\n<%= config.bin %> <%= command.id %> --label \"My Field\"",
        "Specify the local path to the object's folder:\n<%= config.bin %> <%= command.id %> --label \"My Field\" --object force-app/main/default/objects/MyObject__c"
      ],
      "flags": {
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "label": {
          "char": "l",
          "name": "label",
          "required": true,
          "summary": "The field's label.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "object": {
          "char": "o",
          "description": "The object source files in your local project are grouped in a directoy with the same name as the object. Custom object names always end in \"__c\". An example of the object directory for the Account standard object is \"force-app/main/default/objects/Account\" An example custom object directory is \"force-app/main/default/objects/MyObject__c\"\n\nIf you don't specify this flag, the command prompts you to choose from your local objects.",
          "name": "object",
          "summary": "The directory that contains the object's source files.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "schema:generate:field",
      "pluginAlias": "@salesforce/plugin-sobject",
      "pluginName": "@salesforce/plugin-sobject",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate metadata source files for a new custom field on a specified object.",
      "enableJsonFlag": false,
      "requiresProject": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "schema",
        "generate",
        "field.js"
      ],
      "aliasPermutations": [
        "generate:metadata:field",
        "metadata:generate:field",
        "metadata:field:generate",
        "generate:field:metadata",
        "field:generate:metadata",
        "field:metadata:generate"
      ],
      "permutations": [
        "schema:generate:field",
        "generate:schema:field",
        "generate:field:schema",
        "schema:field:generate",
        "field:schema:generate",
        "field:generate:schema"
      ]
    },
    "schema:generate:platformevent": {
      "aliases": [
        "generate:metadata:platformevent"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "This command is interactive and must be run in a Salesforce DX project directory. You're required to specify the event's label with the \"--label\" flag. The command uses this label to provide intelligent suggestions for other event properties, such as its API name.",
      "examples": [
        "Create a platform event with the specified label:\n<%= config.bin %> <%= command.id %> --label \"My Platform Event\""
      ],
      "flags": {
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "label": {
          "char": "l",
          "name": "label",
          "required": true,
          "summary": "The platform event's label.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "schema:generate:platformevent",
      "pluginAlias": "@salesforce/plugin-sobject",
      "pluginName": "@salesforce/plugin-sobject",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate metadata source files for a new platform event.",
      "enableJsonFlag": false,
      "requiresProject": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "schema",
        "generate",
        "platformevent.js"
      ],
      "aliasPermutations": [
        "generate:metadata:platformevent",
        "metadata:generate:platformevent",
        "metadata:platformevent:generate",
        "generate:platformevent:metadata",
        "platformevent:generate:metadata",
        "platformevent:metadata:generate"
      ],
      "permutations": [
        "schema:generate:platformevent",
        "generate:schema:platformevent",
        "generate:platformevent:schema",
        "schema:platformevent:generate",
        "platformevent:schema:generate",
        "platformevent:generate:schema"
      ]
    },
    "schema:generate:sobject": {
      "aliases": [
        "generate:metadata:sobject"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "This command is interactive and must be run in a Salesforce DX project directory. You're required to specify the object's label with the \"--label\" flag. The command uses this label to provide intelligent suggestions for other object properties, such as its API name and plural label.\n\nAll Salesforce objects are required to have a Name field, so this command also prompts you for the label and type of the Name field. Run the \"sf metadata generate field\" command to create additional fields for the object.\n\nTo reduce the number of prompts, use the \"--use-default-features\" flag to automatically enable some features, such as reporting and search on the object.",
      "examples": [
        "Create a custom object with the specified label and be prompted for additional information:\n<%= config.bin %> <%= command.id %> --label \"My Object\"",
        "Create a custom object and enable optional features without prompting:\n<%= config.bin %> <%= command.id %> --label \"My Object\" --use-default-features"
      ],
      "flags": {
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "label": {
          "char": "l",
          "name": "label",
          "required": true,
          "summary": "The custom object's label.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "use-default-features": {
          "char": "f",
          "description": "Enables these features:\n\n- Search: Allows users to find the custom object's records when they search, including SOSL.\n- Feeds: Enables feed tracking.\n- Reports: Allows reporting of the data in the custom object records.\n- History: Enables object history tracking.\n- Activities: Allows users to associate tasks and scheduled calendar events related to the custom object records.\n- Bulk API: With Sharing and Streaming API, classifies the custom object as an Enterprise Application object.\n- Sharing: With Bulk API and Streaming API, classifies the custom object as an Enterprise Application object.\n- Streaming API: With Bulk API and Sharing, classifies the custom object as an Enterprise Application object.",
          "name": "use-default-features",
          "summary": "Enable all optional features without prompting.",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "schema:generate:sobject",
      "pluginAlias": "@salesforce/plugin-sobject",
      "pluginName": "@salesforce/plugin-sobject",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate metadata source files for a new custom object.",
      "enableJsonFlag": false,
      "requiresProject": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "schema",
        "generate",
        "sobject.js"
      ],
      "aliasPermutations": [
        "generate:metadata:sobject",
        "metadata:generate:sobject",
        "metadata:sobject:generate",
        "generate:sobject:metadata",
        "sobject:generate:metadata",
        "sobject:metadata:generate"
      ],
      "permutations": [
        "schema:generate:sobject",
        "generate:schema:sobject",
        "generate:sobject:schema",
        "schema:sobject:generate",
        "sobject:schema:generate",
        "sobject:generate:schema"
      ]
    },
    "schema:generate:tab": {
      "aliases": [
        "generate:metadata:tab"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Custom tabs let you display custom object data or other web content in Salesforce. Custom tabs appear in Salesforce as an item in the appâ€™s navigation bar and in the App Launcher.\n\nThis command must be run in a Salesforce DX project directory. You must pass all required information to it with the required flags. The source files for the custom object for which you're generating a tab don't need to exist in your local project.",
      "examples": [
        "Create a tab on the `MyObject__c` custom object:\n<%= config.bin %> <%= command.id %> --object `MyObject__c` --icon 54 --directory force-app/main/default/tabs"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "object": {
          "char": "o",
          "description": "The API name for a custom object always ends in `__c`, such as `MyObject__c`.",
          "name": "object",
          "required": true,
          "summary": "API name of the custom object you're generating a tab for.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "directory": {
          "char": "d",
          "name": "directory",
          "required": true,
          "summary": "Path to a \"tabs\" directory that will contain the source files for your new tab.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "icon": {
          "char": "i",
          "description": "See https://lightningdesignsystem.com/icons/#custom for the available icons.",
          "name": "icon",
          "required": true,
          "summary": "Number from 1 to 100 that specifies the color scheme and icon for the custom tab.",
          "default": 1,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "schema:generate:tab",
      "pluginAlias": "@salesforce/plugin-sobject",
      "pluginName": "@salesforce/plugin-sobject",
      "pluginType": "core",
      "strict": true,
      "summary": "Generate the metadata source files for a new custom tab on a custom object.",
      "enableJsonFlag": true,
      "requiresProject": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "schema",
        "generate",
        "tab.js"
      ],
      "aliasPermutations": [
        "generate:metadata:tab",
        "metadata:generate:tab",
        "metadata:tab:generate",
        "generate:tab:metadata",
        "tab:generate:metadata",
        "tab:metadata:generate"
      ],
      "permutations": [
        "schema:generate:tab",
        "generate:schema:tab",
        "generate:tab:schema",
        "schema:tab:generate",
        "tab:schema:generate",
        "tab:generate:schema"
      ]
    }
  },
  "version": "1.4.32"
}