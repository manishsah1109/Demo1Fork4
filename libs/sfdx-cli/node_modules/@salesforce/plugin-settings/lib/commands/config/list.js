/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { ConfigAggregator, Messages } from '@salesforce/core';
import { loglevel, SfCommand, Ux } from '@salesforce/sf-plugins-core';
import { buildSuccessMsg, output } from '../../config.js';
Messages.importMessagesDirectoryFromMetaUrl(import.meta.url);
const messages = Messages.loadMessages('@salesforce/plugin-settings', 'config.list');
export default class List extends SfCommand {
    static description = messages.getMessage('description');
    static summary = messages.getMessage('summary');
    static examples = messages.getMessages('examples');
    static aliases = ['force:config:list'];
    static deprecateAliases = true;
    static flags = { loglevel };
    async run() {
        const aggregator = await ConfigAggregator.create();
        const responses = aggregator.getConfigInfo().map((c) => buildSuccessMsg(c));
        output(new Ux({ jsonEnabled: this.jsonEnabled() }), responses, 'list', true);
        return responses;
    }
}
//# sourceMappingURL=list.js.map