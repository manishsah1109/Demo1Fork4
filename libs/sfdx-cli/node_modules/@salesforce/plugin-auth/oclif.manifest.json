{
  "commands": {
    "org:logout": {
      "aliases": [
        "force:auth:logout",
        "auth:logout"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "If you run this command with no flags and no default org set in your config or environment, it first displays a list of orgs you've created or logged into, with none of the orgs selected. Use the arrow keys to scroll through the list and the space bar to select the orgs you want to log out of. Press Enter when you're done; the command asks for a final confirmation before logging out of the selected orgs.\n\nThe process is similar if you specify --all, except that in the initial list of orgs, they're all selected. Use --target-org to logout of a specific org. In both these cases by default, you must still confirm that you want to log out. Use --no-prompt to never be asked for confirmation when also using --all or --target-org.\n\nBe careful! If you log out of a scratch org without having access to its password, you can't access the scratch org again, either through the CLI or the Salesforce UI.",
      "examples": [
        "Interactively select the orgs to log out of:\n<%= config.bin %> <%= command.id %>",
        "Log out of the org with username me@my.org:\n<%= config.bin %> <%= command.id %> --target-org me@my.org",
        "Log out of all orgs after confirmation:\n<%= config.bin %> <%= command.id %> --all",
        "Logout of the org with alias my-scratch and don't prompt for confirmation:\n<%= config.bin %> <%= command.id %> --target-org my-scratch --no-prompt"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "target-org": {
          "aliases": [
            "targetusername",
            "u"
          ],
          "char": "o",
          "deprecateAliases": true,
          "name": "target-org",
          "summary": "Username or alias of the target org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "all": {
          "char": "a",
          "description": "All orgs includes Dev Hubs, sandboxes, DE orgs, and expired, deleted, and unknown-status scratch orgs.",
          "exclusive": [
            "target-org"
          ],
          "name": "all",
          "required": false,
          "summary": "Include all authenticated orgs.",
          "allowNo": false,
          "type": "boolean"
        },
        "no-prompt": {
          "aliases": [
            "noprompt"
          ],
          "char": "p",
          "deprecateAliases": true,
          "name": "no-prompt",
          "required": false,
          "summary": "Don't prompt for confirmation.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:logout",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "Log out of a Salesforce org.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "logout.js"
      ],
      "aliasPermutations": [
        "force:auth:logout",
        "auth:force:logout",
        "auth:logout:force",
        "force:logout:auth",
        "logout:force:auth",
        "logout:auth:force",
        "auth:logout",
        "logout:auth"
      ],
      "permutations": [
        "org:logout",
        "logout:org"
      ]
    },
    "org:list:auth": {
      "aliases": [
        "force:auth:list",
        "auth:list"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "This command uses local authorization information that Salesforce CLI caches when you create a scratch org or log into an org. The command doesn't actually connect to the orgs to verify that they're still active. As a result, this command executes very quickly. If you want to view live information about your authorized orgs, such as their connection status, use the \"org list\" command.",
      "examples": [
        "List local authorization information about your orgs:\n<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:list:auth",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "List authorization information about the orgs you created or logged into.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "list",
        "auth.js"
      ],
      "aliasPermutations": [
        "force:auth:list",
        "auth:force:list",
        "auth:list:force",
        "force:list:auth",
        "list:force:auth",
        "list:auth:force",
        "auth:list",
        "list:auth"
      ],
      "permutations": [
        "org:list:auth",
        "list:org:auth",
        "list:auth:org",
        "org:auth:list",
        "auth:org:list",
        "auth:list:org"
      ]
    },
    "org:login:access-token": {
      "aliases": [
        "force:auth:accesstoken:store",
        "auth:accesstoken:store"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "By default, the command runs interactively and asks you for the access token. If you previously authorized the org, the command prompts whether you want to overwrite the local file. Specify --no-prompt to not be prompted.\n\nTo use the command in a CI/CD script, set the SF_ACCESS_TOKEN environment variable to the access token. Then run the command with the --no-prompt parameter.",
      "examples": [
        "Authorize an org on https://mycompany.my.salesforce.com; the command prompts you for the access token:\n<%= config.bin %> <%= command.id %> --instance-url https://mycompany.my.salesforce.com",
        "Authorize the org without being prompted; you must have previously set the SF_ACCESS_TOKEN environment variable to the access token:\n<%= config.bin %> <%= command.id %> --instance-url https://dev-hub.my.salesforce.com --no-prompt"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "instance-url": {
          "aliases": [
            "instanceurl"
          ],
          "char": "r",
          "deprecateAliases": true,
          "description": "If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file.\n\nTo specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\".\n\nTo specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\".",
          "name": "instance-url",
          "required": true,
          "summary": "URL of the instance that the org lives on.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "set-default-dev-hub": {
          "aliases": [
            "setdefaultdevhub",
            "setdefaultdevhubusername"
          ],
          "char": "d",
          "deprecateAliases": true,
          "name": "set-default-dev-hub",
          "summary": "Set the authenticated org as the default Dev Hub.",
          "allowNo": false,
          "type": "boolean"
        },
        "set-default": {
          "aliases": [
            "setdefaultusername"
          ],
          "char": "s",
          "deprecateAliases": true,
          "name": "set-default",
          "summary": "Set the authenticated org as the default that all org-related commands run against.",
          "allowNo": false,
          "type": "boolean"
        },
        "alias": {
          "aliases": [
            "setalias"
          ],
          "char": "a",
          "deprecateAliases": true,
          "name": "alias",
          "summary": "Alias for the org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-prompt": {
          "aliases": [
            "noprompt"
          ],
          "char": "p",
          "deprecateAliases": true,
          "name": "no-prompt",
          "required": false,
          "summary": "Don't prompt for confirmation.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:login:access-token",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "Authorize an org using an existing Salesforce access token.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "login",
        "access-token.js"
      ],
      "aliasPermutations": [
        "force:auth:accesstoken:store",
        "auth:force:accesstoken:store",
        "auth:accesstoken:force:store",
        "auth:accesstoken:store:force",
        "force:accesstoken:auth:store",
        "accesstoken:force:auth:store",
        "accesstoken:auth:force:store",
        "accesstoken:auth:store:force",
        "force:accesstoken:store:auth",
        "accesstoken:force:store:auth",
        "accesstoken:store:force:auth",
        "accesstoken:store:auth:force",
        "force:auth:store:accesstoken",
        "auth:force:store:accesstoken",
        "auth:store:force:accesstoken",
        "auth:store:accesstoken:force",
        "force:store:auth:accesstoken",
        "store:force:auth:accesstoken",
        "store:auth:force:accesstoken",
        "store:auth:accesstoken:force",
        "force:store:accesstoken:auth",
        "store:force:accesstoken:auth",
        "store:accesstoken:force:auth",
        "store:accesstoken:auth:force",
        "auth:accesstoken:store",
        "accesstoken:auth:store",
        "accesstoken:store:auth",
        "auth:store:accesstoken",
        "store:auth:accesstoken",
        "store:accesstoken:auth"
      ],
      "permutations": [
        "org:login:access-token",
        "login:org:access-token",
        "login:access-token:org",
        "org:access-token:login",
        "access-token:org:login",
        "access-token:login:org"
      ]
    },
    "org:login:device": {
      "aliases": [
        "force:auth:device:login",
        "auth:device:login"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Use this command to allow a device to connect to an org.\n\nWhen you run this command, it first displays an 8-digit device code and the URL for verifying the code on your org. The default instance URL is https://login.salesforce.com, so if the org you're authorizing is on a different instance, use the --instance-url. The command waits while you complete the verification. Open a browser and navigate to the displayed verification URL, enter the code, then click Connect. If you aren't already logged into your org, log in, and then you're prompted to allow the device to connect to the org. After you successfully authorize the org, you can close the browser window.",
      "examples": [
        "Authorize an org using a device code, give the org the alias TestOrg1, and set it as your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --set-default-dev-hub --alias TestOrg1",
        "Authorize an org in which you've created a custom connected app with the specified client ID (consumer key):\n<%= config.bin %> <%= command.id %> --client-id <OAuth client id>",
        "Authorize a sandbox org with the specified instance URL:\n<%= config.bin %> <%= command.id %> --instance-url https://MyDomainName--SandboxName.sandbox.my.salesforce.com"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "client-id": {
          "aliases": [
            "clientid"
          ],
          "char": "i",
          "deprecateAliases": true,
          "name": "client-id",
          "summary": "OAuth client ID (also called consumer key) of your custom connected app.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "instance-url": {
          "aliases": [
            "instanceurl"
          ],
          "char": "r",
          "deprecateAliases": true,
          "description": "If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file.\n\nTo specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\".\n\nTo specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\".",
          "name": "instance-url",
          "summary": "URL of the instance that the org lives on.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "set-default-dev-hub": {
          "aliases": [
            "setdefaultdevhub",
            "setdefaultdevhubusername"
          ],
          "char": "d",
          "deprecateAliases": true,
          "name": "set-default-dev-hub",
          "summary": "Set the authenticated org as the default Dev Hub.",
          "allowNo": false,
          "type": "boolean"
        },
        "set-default": {
          "aliases": [
            "setdefaultusername"
          ],
          "char": "s",
          "deprecateAliases": true,
          "name": "set-default",
          "summary": "Set the authenticated org as the default that all org-related commands run against.",
          "allowNo": false,
          "type": "boolean"
        },
        "alias": {
          "aliases": [
            "setalias"
          ],
          "char": "a",
          "deprecateAliases": true,
          "name": "alias",
          "summary": "Alias for the org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:login:device",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "Authorize an org using a device code.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "login",
        "device.js"
      ],
      "aliasPermutations": [
        "force:auth:device:login",
        "auth:force:device:login",
        "auth:device:force:login",
        "auth:device:login:force",
        "force:device:auth:login",
        "device:force:auth:login",
        "device:auth:force:login",
        "device:auth:login:force",
        "force:device:login:auth",
        "device:force:login:auth",
        "device:login:force:auth",
        "device:login:auth:force",
        "force:auth:login:device",
        "auth:force:login:device",
        "auth:login:force:device",
        "auth:login:device:force",
        "force:login:auth:device",
        "login:force:auth:device",
        "login:auth:force:device",
        "login:auth:device:force",
        "force:login:device:auth",
        "login:force:device:auth",
        "login:device:force:auth",
        "login:device:auth:force",
        "auth:device:login",
        "device:auth:login",
        "device:login:auth",
        "auth:login:device",
        "login:auth:device",
        "login:device:auth"
      ],
      "permutations": [
        "org:login:device",
        "login:org:device",
        "login:device:org",
        "org:device:login",
        "device:org:login",
        "device:login:org"
      ]
    },
    "org:login:jwt": {
      "aliases": [
        "force:auth:jwt:grant",
        "auth:jwt:grant"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Use this command in automated environments where you can’t interactively log in with a browser, such as in CI/CD scripts.\n\nLogging into an org authorizes the CLI to run other commands that connect to that org, such as deploying or retrieving a project. You can log into many types of orgs, such as sandboxes, Dev Hubs, Env Hubs, production orgs, and scratch orgs.\n\nComplete these steps before you run this command:\n\n    1. Create a digital certificate (also called digital signature) and the private key to sign the certificate. You can use your own key and certificate issued by a certification authority. Or use OpenSSL to create a key and a self-signed digital certificate.\n    2. Store the private key in a file on your computer. When you run this command, you set the --jwt-key-file flag to this file.\n    3. Create a custom connected app in your org using the digital certificate. Make note of the consumer key (also called client id) that’s generated for you. Be sure the username of the user logging in is approved to use the connected app. When you run this command, you set the --client-id flag to the consumer key.\n\nSee https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_auth_jwt_flow.htm for more information.\n\nWe recommend that you set an alias when you log into an org. Aliases make it easy to later reference this org when running commands that require it. If you don’t set an alias, you use the username that you specified when you logged in to the org. If you run multiple commands that reference the same org, consider setting the org as your default. Use --set-default for your default scratch org or sandbox, or --set-default-dev-hub for your default Dev Hub.",
      "examples": [
        "Log into an org with username jdoe@example.org and on the default instance URL (https://login.salesforce.com). The private key is stored in the file /Users/jdoe/JWT/server.key and the command uses the connected app with consumer key (client id) 04580y4051234051.\n<%= config.bin %> <%= command.id %> --username jdoe@example.org --jwt-key-file /Users/jdoe/JWT/server.key --client-id 04580y4051234051",
        "Set the org as the default and give it an alias:\n<%= config.bin %> <%= command.id %> --username jdoe@example.org --jwt-key-file /Users/jdoe/JWT/server.key --client-id 04580y4051234051 --alias ci-org --set-default",
        "Set the org as the default Dev Hub and give it an alias:\n<%= config.bin %> <%= command.id %> --username jdoe@example.org --jwt-key-file /Users/jdoe/JWT/server.key --client-id 04580y4051234051 --alias ci-dev-hub --set-default-dev-hub",
        "Log in to a sandbox using URL https://MyDomainName--SandboxName.sandbox.my.salesforce.com:\n<%= config.bin %> <%= command.id %> --username jdoe@example.org --jwt-key-file /Users/jdoe/JWT/server.key --client-id 04580y4051234051 --alias ci-org --set-default --instance-url https://MyDomainName--SandboxName.sandbox.my.salesforce.com"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "username": {
          "aliases": [
            "u"
          ],
          "char": "o",
          "deprecateAliases": true,
          "name": "username",
          "required": true,
          "summary": "Username of the user logging in.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "jwt-key-file": {
          "aliases": [
            "jwtkeyfile",
            "keyfile"
          ],
          "char": "f",
          "deprecateAliases": true,
          "name": "jwt-key-file",
          "required": true,
          "summary": "Path to a file containing the private key.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "client-id": {
          "aliases": [
            "clientid"
          ],
          "char": "i",
          "deprecateAliases": true,
          "name": "client-id",
          "required": true,
          "summary": "OAuth client ID (also called consumer key) of your custom connected app.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "instance-url": {
          "aliases": [
            "instanceurl",
            "l"
          ],
          "char": "r",
          "deprecateAliases": true,
          "description": "If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file.\n\nTo specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\".\n\nTo specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\".",
          "name": "instance-url",
          "summary": "URL of the instance that the org lives on.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "set-default-dev-hub": {
          "aliases": [
            "setdefaultdevhub",
            "setdefaultdevhubusername",
            "v"
          ],
          "char": "d",
          "deprecateAliases": true,
          "name": "set-default-dev-hub",
          "summary": "Set the authenticated org as the default Dev Hub.",
          "allowNo": false,
          "type": "boolean"
        },
        "set-default": {
          "aliases": [
            "setdefaultusername"
          ],
          "char": "s",
          "deprecateAliases": true,
          "name": "set-default",
          "summary": "Set the authenticated org as the default that all org-related commands run against.",
          "allowNo": false,
          "type": "boolean"
        },
        "alias": {
          "aliases": [
            "setalias"
          ],
          "char": "a",
          "deprecateAliases": true,
          "name": "alias",
          "summary": "Alias for the org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-prompt": {
          "aliases": [
            "noprompt"
          ],
          "char": "p",
          "deprecateAliases": true,
          "hidden": true,
          "name": "no-prompt",
          "required": false,
          "summary": "Don't prompt for confirmation.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:login:jwt",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "Log in to a Salesforce org using a JSON web token (JWT).",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "login",
        "jwt.js"
      ],
      "aliasPermutations": [
        "force:auth:jwt:grant",
        "auth:force:jwt:grant",
        "auth:jwt:force:grant",
        "auth:jwt:grant:force",
        "force:jwt:auth:grant",
        "jwt:force:auth:grant",
        "jwt:auth:force:grant",
        "jwt:auth:grant:force",
        "force:jwt:grant:auth",
        "jwt:force:grant:auth",
        "jwt:grant:force:auth",
        "jwt:grant:auth:force",
        "force:auth:grant:jwt",
        "auth:force:grant:jwt",
        "auth:grant:force:jwt",
        "auth:grant:jwt:force",
        "force:grant:auth:jwt",
        "grant:force:auth:jwt",
        "grant:auth:force:jwt",
        "grant:auth:jwt:force",
        "force:grant:jwt:auth",
        "grant:force:jwt:auth",
        "grant:jwt:force:auth",
        "grant:jwt:auth:force",
        "auth:jwt:grant",
        "jwt:auth:grant",
        "jwt:grant:auth",
        "auth:grant:jwt",
        "grant:auth:jwt",
        "grant:jwt:auth"
      ],
      "permutations": [
        "org:login:jwt",
        "login:org:jwt",
        "login:jwt:org",
        "org:jwt:login",
        "jwt:org:login",
        "jwt:login:org"
      ]
    },
    "org:login:sfdx-url": {
      "aliases": [
        "force:auth:sfdxurl:store",
        "auth:sfdxurl:store"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "The Salesforce DX (SFDX) authorization URL must have the format \"force://<clientId>:<clientSecret>:<refreshToken>@<instanceUrl>\". NOTE: The SFDX authorization URL uses the \"force\" protocol, and not \"http\" or \"https\". Also, the \"instanceUrl\" inside the SFDX authorization URL doesn't include the protocol (\"https://\").\n\nYou have three options when creating the authorization file. The easiest option is to redirect the output of the \"<%= config.bin %> org display --verbose --json\" command into a file. For example, using an org with alias my-org that you've already authorized:\n\n    $ <%= config.bin %> org display --target-org my-org --verbose --json > authFile.json\n\nThe resulting JSON file contains the URL in the \"sfdxAuthUrl\" property of the \"result\" object. You can then reference the file when running this command:\n\n    $ <%= config.bin %> <%= command.id %> --sfdx-url-file authFile.json\n\nNOTE: The \"<%= config.bin %> org display --verbose\" command displays the refresh token only for orgs authorized with the web server flow, and not the JWT bearer flow.\n\nYou can also create a JSON file that has a top-level property named sfdxAuthUrl whose value is the authorization URL. Finally, you can create a normal text file that includes just the URL and nothing else.\n\nAlternatively, you can pipe the SFDX authorization URL through standard input by specifying the --sfdx-url-stdin flag.",
      "examples": [
        "Authorize an org using the SFDX authorization URL in the files/authFile.json file:\n<%= config.bin %> <%= command.id %> --sfdx-url-file files/authFile.json",
        "Similar to previous example, but set the org as your default and give it an alias MyDefaultOrg:\n<%= config.bin %> <%= command.id %> --sfdx-url-file files/authFile.json --set-default --alias MyDefaultOrg",
        "Pipe the SFDX authorization URL from stdin:\n$ echo url | sf <%= command.id %> --sfdx-url-stdin"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "sfdx-url-file": {
          "aliases": [
            "sfdxurlfile"
          ],
          "char": "f",
          "deprecateAliases": true,
          "name": "sfdx-url-file",
          "required": false,
          "summary": "Path to a file that contains the Salesforce DX authorization URL.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "sfdx-url-stdin": {
          "aliases": [
            "sfdxurlstdin"
          ],
          "char": "u",
          "deprecateAliases": true,
          "name": "sfdx-url-stdin",
          "required": false,
          "summary": "Pipe the Salesforce DX authorization URL through standard input (stdin).",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "set-default-dev-hub": {
          "aliases": [
            "setdefaultdevhub",
            "setdefaultdevhubusername"
          ],
          "char": "d",
          "deprecateAliases": true,
          "name": "set-default-dev-hub",
          "summary": "Set the authenticated org as the default Dev Hub.",
          "allowNo": false,
          "type": "boolean"
        },
        "set-default": {
          "aliases": [
            "setdefaultusername"
          ],
          "char": "s",
          "deprecateAliases": true,
          "name": "set-default",
          "summary": "Set the authenticated org as the default that all org-related commands run against.",
          "allowNo": false,
          "type": "boolean"
        },
        "alias": {
          "aliases": [
            "setalias"
          ],
          "char": "a",
          "deprecateAliases": true,
          "name": "alias",
          "summary": "Alias for the org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-prompt": {
          "aliases": [
            "noprompt"
          ],
          "char": "p",
          "deprecateAliases": true,
          "hidden": true,
          "name": "no-prompt",
          "required": false,
          "summary": "Don't prompt for confirmation.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:login:sfdx-url",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "Authorize an org using a Salesforce DX authorization URL stored in a file or through standard input (stdin).",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "login",
        "sfdx-url.js"
      ],
      "aliasPermutations": [
        "force:auth:sfdxurl:store",
        "auth:force:sfdxurl:store",
        "auth:sfdxurl:force:store",
        "auth:sfdxurl:store:force",
        "force:sfdxurl:auth:store",
        "sfdxurl:force:auth:store",
        "sfdxurl:auth:force:store",
        "sfdxurl:auth:store:force",
        "force:sfdxurl:store:auth",
        "sfdxurl:force:store:auth",
        "sfdxurl:store:force:auth",
        "sfdxurl:store:auth:force",
        "force:auth:store:sfdxurl",
        "auth:force:store:sfdxurl",
        "auth:store:force:sfdxurl",
        "auth:store:sfdxurl:force",
        "force:store:auth:sfdxurl",
        "store:force:auth:sfdxurl",
        "store:auth:force:sfdxurl",
        "store:auth:sfdxurl:force",
        "force:store:sfdxurl:auth",
        "store:force:sfdxurl:auth",
        "store:sfdxurl:force:auth",
        "store:sfdxurl:auth:force",
        "auth:sfdxurl:store",
        "sfdxurl:auth:store",
        "sfdxurl:store:auth",
        "auth:store:sfdxurl",
        "store:auth:sfdxurl",
        "store:sfdxurl:auth"
      ],
      "permutations": [
        "org:login:sfdx-url",
        "login:org:sfdx-url",
        "login:sfdx-url:org",
        "org:sfdx-url:login",
        "sfdx-url:org:login",
        "sfdx-url:login:org"
      ]
    },
    "org:login:web": {
      "aliases": [
        "force:auth:web:login",
        "auth:web:login"
      ],
      "args": {},
      "deprecateAliases": true,
      "description": "Opens a Salesforce instance URL in a web browser so you can enter your credentials and log in to your org. After you log in, you can close the browser window.\n\nLogging into an org authorizes the CLI to run other commands that connect to that org, such as deploying or retrieving metadata. You can log into many types of orgs, such as sandboxes, Dev Hubs, Env Hubs, production orgs, and scratch orgs.\n\nWe recommend that you set an alias when you log into an org. Aliases make it easy to later reference this org when running commands that require it. If you don’t set an alias, you use the username that you specified when you logged in to the org. If you run multiple commands that reference the same org, consider setting the org as your default. Use --set-default for your default scratch org or sandbox, or --set-default-dev-hub for your default Dev Hub.\n\nBy default, this command uses the global out-of-the-box connected app in your org. If you need more security or control, such as setting the refresh token timeout or specifying IP ranges, create your own connected app using a digital certificate. Make note of the consumer key (also called cliend id) that’s generated for you. Then specify the consumer key with the --client-id flag.",
      "examples": [
        "Run the command with no flags to open the default Salesforce login page (https://login.salesforce.com):\n<%= config.bin %> <%= command.id %>",
        "Log in to your Dev Hub, set it as your default Dev Hub, and set an alias that you reference later when you create a scratch org:\n<%= config.bin %> <%= command.id %> --set-default-dev-hub --alias dev-hub",
        "Log in to a sandbox and set it as your default org:\n<%= config.bin %> <%= command.id %> --instance-url https://MyDomainName--SandboxName.sandbox.my.salesforce.com --set-default",
        "Use --browser to specify a specific browser, such as Google Chrome:\n<%= config.bin %> <%= command.id %> --instance-url https://MyDomainName--SandboxName.sandbox.my.salesforce.com --set-default --browser chrome",
        "Use your own connected app by specifying its consumer key (also called client ID):\n<%= config.bin %> <%= command.id %> --instance-url https://MyDomainName--SandboxName.sandbox.my.salesforce.com --set-default --browser chrome --client-id 04580y4051234051"
      ],
      "flags": {
        "json": {
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "flags-dir": {
          "helpGroup": "GLOBAL",
          "name": "flags-dir",
          "summary": "Import flag values from a directory.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "browser": {
          "char": "b",
          "description": "If you don’t specify --browser, the command uses your default browser. The exact names of the browser applications differ depending on the operating system you're on; check your documentation for details.",
          "name": "browser",
          "summary": "Browser in which to open the org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "chrome",
            "edge",
            "firefox"
          ],
          "type": "option"
        },
        "client-id": {
          "aliases": [
            "clientid"
          ],
          "char": "i",
          "deprecateAliases": true,
          "name": "client-id",
          "summary": "OAuth client ID (also called consumer key) of your custom connected app.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "instance-url": {
          "aliases": [
            "instanceurl",
            "l"
          ],
          "char": "r",
          "deprecateAliases": true,
          "description": "If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file.\n\nTo specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\".\n\nTo specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\".",
          "name": "instance-url",
          "summary": "URL of the instance that the org lives on.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "set-default-dev-hub": {
          "aliases": [
            "setdefaultdevhubusername",
            "setdefaultdevhub",
            "v"
          ],
          "char": "d",
          "deprecateAliases": true,
          "name": "set-default-dev-hub",
          "summary": "Set the authenticated org as the default Dev Hub.",
          "allowNo": false,
          "type": "boolean"
        },
        "set-default": {
          "aliases": [
            "setdefaultusername"
          ],
          "char": "s",
          "deprecateAliases": true,
          "name": "set-default",
          "summary": "Set the authenticated org as the default that all org-related commands run against.",
          "allowNo": false,
          "type": "boolean"
        },
        "alias": {
          "aliases": [
            "setalias"
          ],
          "char": "a",
          "deprecateAliases": true,
          "name": "alias",
          "summary": "Alias for the org.",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-prompt": {
          "aliases": [
            "noprompt"
          ],
          "char": "p",
          "deprecateAliases": true,
          "hidden": true,
          "name": "no-prompt",
          "required": false,
          "summary": "Don't prompt for confirmation.",
          "allowNo": false,
          "type": "boolean"
        },
        "loglevel": {
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "hidden": true,
          "name": "loglevel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "org:login:web",
      "pluginAlias": "@salesforce/plugin-auth",
      "pluginName": "@salesforce/plugin-auth",
      "pluginType": "core",
      "strict": true,
      "summary": "Log in to a Salesforce org using the web server flow.",
      "enableJsonFlag": true,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "org",
        "login",
        "web.js"
      ],
      "aliasPermutations": [
        "force:auth:web:login",
        "auth:force:web:login",
        "auth:web:force:login",
        "auth:web:login:force",
        "force:web:auth:login",
        "web:force:auth:login",
        "web:auth:force:login",
        "web:auth:login:force",
        "force:web:login:auth",
        "web:force:login:auth",
        "web:login:force:auth",
        "web:login:auth:force",
        "force:auth:login:web",
        "auth:force:login:web",
        "auth:login:force:web",
        "auth:login:web:force",
        "force:login:auth:web",
        "login:force:auth:web",
        "login:auth:force:web",
        "login:auth:web:force",
        "force:login:web:auth",
        "login:force:web:auth",
        "login:web:force:auth",
        "login:web:auth:force",
        "auth:web:login",
        "web:auth:login",
        "web:login:auth",
        "auth:login:web",
        "login:auth:web",
        "login:web:auth"
      ],
      "permutations": [
        "org:login:web",
        "login:org:web",
        "login:web:org",
        "org:web:login",
        "web:org:login",
        "web:login:org"
      ]
    }
  },
  "version": "3.6.51"
}